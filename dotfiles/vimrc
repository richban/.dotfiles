set nocompatible

"" Plugins

call plug#begin('~/.vim/plugged')
	Plug 'majutsushi/tagbar'
	Plug 'kien/ctrlp.vim'
    Plug 'scrooloose/syntastic'
    Plug 'tpope/vim-surround'
    Plug 'Raimondi/delimitMate'
    Plug 'godlygeek/tabular'
    Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
    Plug 'tpope/vim-fugitive'
    Plug 'plasticboy/vim-markdown'
    Plug 'ekalinin/Dockerfile.vim'
    Plug 'vim-airline/vim-airline'
    Plug 'liuchengxu/space-vim-dark'
call plug#end()

filetype plugin indent on       " Add filetype, plugin, and indent support
syntax on

"" Colorscheme

" for vim 8
if (has("termguicolors"))
    set termguicolors
endif
let ayucolor="dark"
colorscheme ayu

set cursorline
set fillchars=vert:â”‚,fold:-
let ayucolor="dark"
colorscheme ayu

"" Formating

set encoding=utf-8
set showcmd

set textwidth=79
set colorcolumn=80
set laststatus=2
set linespace=1
set autoindent

set mouse=a
set ttymouse=sgr

""" Whitespace

set nowrap                      " don't wrap lines
set tabstop=4                   " a tab is two spaces (or set this to 4)
set shiftwidth=4                   " a tab is two spaces (or set this to 4)
set expandtab                   " use spaces, not tabs (optional)
set smarttab
set backspace=indent,eol,start  " backspace through everything in insert mode

"" Searching
set hlsearch                   " highlight matches
set incsearch                  " incremental searching
set ignorecase                 " searches are case insensitive...
set smartcase                  " ... unless they contain at least one capital letter
set nu

set wildmenu

" Useful for accessing commonly-used files
nnoremap <leader>v :e $MYVIMRC<CR>
nnoremap <leader>z :e ~/.zshrc<CR>
nnoremap <leader>a :e ~/.alias<CR>
nnoremap <leader>f :e ~/.functions<CR>
nnoremap <leader>e :e ~/.env<CR>

" Toggle Paste mode
nnoremap <leader>p :set paste!<CR>

" Join yanked text on a yank (needed for terminal mode copies)
vnoremap yy y<CR>:let @"=substitute(@", '\n', '', 'g')<CR>:call yank#Osc52Yank()<CR>

" Window management
nnoremap <silent> <Leader>+ :exe "resize " . (winheight(0) * 6/5)<CR>
nnoremap <silent> <Leader>- :exe "resize " . (winheight(0) * 5/6)<CR>

"" Swap/backup

set backupdir=~/tmp
set noswapfile
set nowritebackup
set nobackup

"" ctrlp

let g:ctrlp_extensions = ['tag', 'buffertag', 'quickfix', 'dir']
let g:ctrlp_switch_buffer = 'et'

"" Syntax

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:python_highlight_builtin_funcs=1
let g:python_highlight_builtin_objs=1

let g:syntastic_python_checkers=["mypy", "pep8", "python"]
let g:syntastic_python_mypy_args="--python-version 3.6 --disallow-untyped-defs --warn-no-return"

"" tagbar

let g:tagbar_left = 1

"" Nerdtree

nmap <silent> te :NERDTreeToggle<CR>
nmap <silent> <f1> :NERDTreeToggle<CR>

let g:NERDTreeWinPos = "right"
let NERDTreeIgnore = ['\.pyc$', '__pycache__']

"" Tagbar

nmap <silent> tt :TagbarToggle<CR>

"" Syntastic

nmap <silent> tc :SyntasticCheck<CR>

"" Git

nmap <silent> tg :Gstatus<CR>
nmap <silent> td :Gvdiff<CR>

"" Move among buffers with CTRL

map <C-H> :bnext<CR>
map <C-L> :bprev<CR>

"" Powerline

let g:airline_section_x = '%{airline#util#prepend(airline#extensions#tagbar#currenttag(),0)}'
let g:airline_section_y = ''

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline#extensions#tabline#formatter = 'default'

"" File-type specific

autocmd FileType hs setlocal shiftwidth=2 tabstop=2

"" Recognize markdown objects in the tagbar. Requires separate ctags
"" configuration.

let g:tagbar_type_markdown = {
    \ 'ctagstype' : 'markdown',
    \ 'kinds' : [
        \ 'h:Heading:0:1',
        \ 'i:Image:0:0',
        \ 'f:Footnote:0:0',
    \ ],
    \ 'sort'    : 0,
    \ }
let g:tagbar_left = 1

"" Markdown: enable math
let g:vim_markdown_math = 1
set conceallevel=0

